// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  password  String?
  username  String?
  profilePicture String?
  authProvider String[] @default([])
  resetToken       String?
  resetTokenExpiry DateTime?
  role      Role    @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  templates Template[]
  forms     Form[]
  comments  Comment[]
  likes     Like[]
  templateAccess TemplateAccess[]
  auditLogs AuditLog[]
}

enum Role {
  USER
  ADMIN
}

model Template {
  id          String  @id @default(uuid())
  ownerId     String
  title       String
  description String
  topic       String?
  image       String?
  isPublic    Boolean @default(false)
  version     Int     @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  owner       User      @relation(fields: [ownerId], references: [id])
  questions   Question[]
  forms       Form[]
  comments    Comment[]
  likes       Like[]
  stats       TemplateStats?
  accessControl TemplateAccess[]
  tags        TemplateTag[]
  
  @@index([title, description])
}

model TemplateAccess {
  id         String  @id @default(uuid())
  templateId String
  userId     String

  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([templateId, userId])
}

model TemplateStats {
  templateId   String @id
  totalForms   Int    @default(0)
  totalLikes   Int    @default(0)
  totalViews   Int    @default(0)
  avgNumericResponses Float?
  mostCommonAnswers String?

  template     Template @relation(fields: [templateId], references: [id])
}

model Question {
  id         String  @id @default(uuid())
  templateId String
  type       QuestionType
  title      String
  description String?
  showInTable Boolean @default(false)
  order Int @default(0)
  options String?
  isRequired  Boolean  @default(false)

  template   Template @relation(fields: [templateId], references: [id])
  answers    Answer[]
}

enum QuestionType {
  SINGLE_LINE
  MULTI_LINE
  INTEGER
  CHECKBOX
  MULTIPLE_CHOICE
  DROPDOWN
}

model Form {
  id          String  @id @default(uuid())
  templateId  String
  userId      String
  isFinalized Boolean @default(false)
  emailCopyRequested Boolean @default(false)
  createdAt   DateTime @default(now())
  deletedAt   DateTime?

  template    Template @relation(fields: [templateId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  answers     Answer[]
}

model Answer {
  id         String  @id @default(uuid())
  formId     String
  questionId String
  value      String

  form       Form     @relation(fields: [formId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
}

model Comment {
  id         String  @id @default(uuid())
  templateId String
  userId     String
  text       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deletedAt  DateTime?

  template   Template @relation(fields: [templateId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}

model Like {
  id         String  @id @default(uuid())
  templateId String
  userId     String

  template   Template @relation(fields: [templateId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@unique([templateId, userId])
}

model Tag {
  id    String  @id @default(uuid())
  name  String  @unique

  templateTags TemplateTag[]
}

model TemplateTag {
  templateId String
  tagId      String

  template   Template @relation(fields: [templateId], references: [id])
  tag        Tag      @relation(fields: [tagId], references: [id])

  @@id([templateId, tagId])
}

model AuditLog {
  id          String  @id @default(uuid())
  userId      String
  action      String
  entityType  String
  entityId    String
  timestamp   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}
